{"ast":null,"code":"/*!\n * delete <https://github.com/jonschlinkert/delete>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n'use strict';\n\nvar lazy = require('lazy-cache')(require);\n\nvar rimraf = lazy('rimraf');\nvar promise = lazy('bluebird');\n\nvar utils = require('./lib/utils');\n\nfunction del(fp, options, next) {\n  if (typeof options === 'function') {\n    next = options;\n    options = {};\n  }\n\n  try {\n    assertDirectory(fp, options);\n    return rimraf()(fp, next);\n  } catch (err) {\n    return next(err);\n  }\n}\n\ndel.sync = function delSync(fp, options) {\n  try {\n    assertDirectory(fp, options);\n    rimraf().sync(fp);\n    return fp;\n  } catch (err) {\n    throw err;\n  }\n};\n\ndel.promise = function delPromise(fp, options) {\n  assertDirectory(fp, options);\n  var Promise = promise();\n  return new Promise(function (resolve, reject) {\n    rimraf()(fp, function (err) {\n      if (err) return reject(err);\n      resolve();\n    });\n  });\n};\n\nfunction assertDirectory(fp, options) {\n  options = options || {};\n  if (options && options.force) return;\n\n  if (utils.isCurrentDir(fp) === true) {\n    throw new Error('Whoooaaa there! If you\\'re sure you want to do this, define `options.force` to delete the current working directory.');\n  }\n\n  if (utils.insideCurrentDir(fp) === false) {\n    throw new Error('Yikes!! Take care! `options.force` must be defined to delete files or folders outside the current working directory.');\n  }\n}\n/**\n * Expose `del`\n */\n\n\nmodule.exports = del;","map":{"version":3,"names":["lazy","require","rimraf","promise","utils","del","fp","options","next","assertDirectory","err","sync","delSync","delPromise","Promise","resolve","reject","force","isCurrentDir","Error","insideCurrentDir","module","exports"],"sources":["/Users/robinlaws/Documents/ASDTERM3/CP3540 Applied ASD Project /React-Movie-Reviews/movie-reviews/node_modules/delete/index.js"],"sourcesContent":["/*!\n * delete <https://github.com/jonschlinkert/delete>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar lazy = require('lazy-cache')(require);\nvar rimraf = lazy('rimraf');\nvar promise = lazy('bluebird');\nvar utils = require('./lib/utils');\n\nfunction del(fp, options, next) {\n  if (typeof options === 'function') {\n    next = options;\n    options = {};\n  }\n  try {\n    assertDirectory(fp, options);\n    return rimraf()(fp, next);\n  } catch(err) {\n    return next(err);\n  }\n}\n\n\ndel.sync = function delSync(fp, options) {\n  try {\n    assertDirectory(fp, options);\n    rimraf().sync(fp);\n    return fp;\n  } catch (err) {\n    throw err;\n  }\n};\n\n\ndel.promise = function delPromise(fp, options) {\n  assertDirectory(fp, options);\n  var Promise = promise();\n\n  return new Promise(function (resolve, reject) {\n    rimraf()(fp, function (err) {\n      if (err) return reject(err);\n      resolve();\n    });\n  });\n};\n\n\nfunction assertDirectory(fp, options) {\n  options = options || {};\n  if (options && options.force) return;\n\n  if (utils.isCurrentDir(fp) === true) {\n    throw new Error('Whoooaaa there! If you\\'re sure you want to do this, define `options.force` to delete the current working directory.');\n  }\n\n  if (utils.insideCurrentDir(fp) === false) {\n    throw new Error('Yikes!! Take care! `options.force` must be defined to delete files or folders outside the current working directory.');\n  }\n}\n\n/**\n * Expose `del`\n */\n\nmodule.exports = del;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBA,OAAtB,CAAX;;AACA,IAAIC,MAAM,GAAGF,IAAI,CAAC,QAAD,CAAjB;AACA,IAAIG,OAAO,GAAGH,IAAI,CAAC,UAAD,CAAlB;;AACA,IAAII,KAAK,GAAGH,OAAO,CAAC,aAAD,CAAnB;;AAEA,SAASI,GAAT,CAAaC,EAAb,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgC;EAC9B,IAAI,OAAOD,OAAP,KAAmB,UAAvB,EAAmC;IACjCC,IAAI,GAAGD,OAAP;IACAA,OAAO,GAAG,EAAV;EACD;;EACD,IAAI;IACFE,eAAe,CAACH,EAAD,EAAKC,OAAL,CAAf;IACA,OAAOL,MAAM,GAAGI,EAAH,EAAOE,IAAP,CAAb;EACD,CAHD,CAGE,OAAME,GAAN,EAAW;IACX,OAAOF,IAAI,CAACE,GAAD,CAAX;EACD;AACF;;AAGDL,GAAG,CAACM,IAAJ,GAAW,SAASC,OAAT,CAAiBN,EAAjB,EAAqBC,OAArB,EAA8B;EACvC,IAAI;IACFE,eAAe,CAACH,EAAD,EAAKC,OAAL,CAAf;IACAL,MAAM,GAAGS,IAAT,CAAcL,EAAd;IACA,OAAOA,EAAP;EACD,CAJD,CAIE,OAAOI,GAAP,EAAY;IACZ,MAAMA,GAAN;EACD;AACF,CARD;;AAWAL,GAAG,CAACF,OAAJ,GAAc,SAASU,UAAT,CAAoBP,EAApB,EAAwBC,OAAxB,EAAiC;EAC7CE,eAAe,CAACH,EAAD,EAAKC,OAAL,CAAf;EACA,IAAIO,OAAO,GAAGX,OAAO,EAArB;EAEA,OAAO,IAAIW,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;IAC5Cd,MAAM,GAAGI,EAAH,EAAO,UAAUI,GAAV,EAAe;MAC1B,IAAIA,GAAJ,EAAS,OAAOM,MAAM,CAACN,GAAD,CAAb;MACTK,OAAO;IACR,CAHK,CAAN;EAID,CALM,CAAP;AAMD,CAVD;;AAaA,SAASN,eAAT,CAAyBH,EAAzB,EAA6BC,OAA7B,EAAsC;EACpCA,OAAO,GAAGA,OAAO,IAAI,EAArB;EACA,IAAIA,OAAO,IAAIA,OAAO,CAACU,KAAvB,EAA8B;;EAE9B,IAAIb,KAAK,CAACc,YAAN,CAAmBZ,EAAnB,MAA2B,IAA/B,EAAqC;IACnC,MAAM,IAAIa,KAAJ,CAAU,sHAAV,CAAN;EACD;;EAED,IAAIf,KAAK,CAACgB,gBAAN,CAAuBd,EAAvB,MAA+B,KAAnC,EAA0C;IACxC,MAAM,IAAIa,KAAJ,CAAU,sHAAV,CAAN;EACD;AACF;AAED;AACA;AACA;;;AAEAE,MAAM,CAACC,OAAP,GAAiBjB,GAAjB"},"metadata":{},"sourceType":"script"}