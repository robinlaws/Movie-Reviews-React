{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar util = require('util');\n\nvar utils = require('./utils');\n\nvar Command = require('./command');\n\nvar parse = require('./parser');\n\nvar events = require('events');\n\nvar logFmt = '--pretty=format:\\'{\"commit\":\"%H\",\"author\":\"%an <%ae>\",' + '\"date\":\"%ad\",\"message\":\"%s\"}\\',';\n\nif (require('os').platform() === 'win32') {\n  logFmt = '--pretty=format:{\\\\\"commit\\\\\":\\\\\"\"%H\"\\\\\",\\\\\"author\\\\\":\\\\\"\"%an ^<%ae^>\"\\\\\",' + '\\\\\"date\\\\\":\\\\\"%ad\\\\\",\\\\\"message\\\\\":\\\\\"%s\\\\\"},';\n}\n/**\n* Represents a Git repository.\n* Requires 'repo' string identifying the local repository directory.\n* Accepts optional 'gitpathOrOpts' that may be a string identifying the\n* path to the native git client or an object containing an optional\n* 'gitpath' property, an optional 'largeOperations' property, and an\n* optional 'largeOperationsMaxBuffer'.\n* {\n*   gitpath: a string representing the path to the git client\n*   largeOperations: array of strings identifying large operations\n*   largeOperationsMaxBuffer: number, default is 1024 * 5000\n* }\n* @constructor\n* @param {string} repo\n* @param {string|object} gitpathOrOpts a 'gitpath' string or opts object\n*/\n\n\nvar Repository = function (repo, gitpathOrOpts) {\n  if (!(this instanceof Repository)) {\n    return new Repository(repo, gitpathOrOpts);\n  }\n\n  var self = this;\n  events.EventEmitter.call(this);\n\n  if (utils.isString(gitpathOrOpts)) {\n    // interpret 'opts' string as gitpath\n    self.gitpath = path.normalize(gitpathOrOpts);\n  }\n\n  if (utils.isObject(gitpathOrOpts)) {\n    var opts = gitpathOrOpts;\n\n    if (opts.gitpath) {\n      self.gitpath = path.normalize(opts.gitpath);\n    }\n\n    self.largeOperations = opts.largeOperations;\n    self.largeOperationsMaxBuffer = opts.largeOperationsMaxBuffer;\n  }\n\n  self.path = path.normalize(repo);\n  self._ready = false;\n  self.name = path.basename(self.path); // apply defaults\n\n  self.gitpath = self.gitpath || '';\n  self.largeOperations = self.largeOperations || ['log', 'ls-files'];\n  self.largeOperationsMaxBuffer = self.largeOperationsMaxBuffer || 1024 * 5000;\n  fs.exists(self.path + '/.git', function (exists) {\n    self.initialized = exists;\n    self._ready = true;\n    self.emit('ready');\n  });\n};\n\nutil.inherits(Repository, events.EventEmitter);\n/**\n* Initializes the given directory as a git repository\n* @param {array} flags\n* @param {function} callback\n*/\n\nRepository.prototype.init = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var flags = Array.isArray(args[0]) ? args[0] : [];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var cmd = new Command(self, 'init', flags, '');\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err || new Error(stderr));\n    }\n\n    self.initialized = true;\n    done();\n  });\n};\n/**\n* Initializes the given directory as a git repository\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.initSync = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var flags = Array.isArray(args[0]) ? args[0] : [];\n  var cmd = new Command(self, 'init', flags, '');\n  cmd.execSync();\n  self.initialized = true;\n  return self.initialized;\n};\n/**\n* Forwards the commit history to the callback function\n* @param {string} path - optional branch or path\n* @param {function} callback\n*/\n\n\nRepository.prototype.log = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var path = typeof args[0] === 'string' ? args[0] : '';\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var cmd = new Command(self, 'log', [logFmt, path]);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err || stderr) {\n      return done(err || new Error(stderr));\n    }\n\n    done(null, parse.log(stdout));\n  });\n};\n/**\n* Returns the commit history\n* @param {string} branch\n*/\n\n\nRepository.prototype.logSync = function (branch) {\n  var self = this;\n  var cmd = new Command(self, 'log', [logFmt, branch || '']);\n  return parse.log(cmd.execSync());\n};\n/**\n* Forwards the git status object to the callback function\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.status = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[0]) ? args[0] : [];\n  var status = new Command(self, 'status', flags);\n  var lsFiles = new Command(self, 'ls-files', ['-o', '--exclude-standard']);\n  status.exec(function (err, status, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    lsFiles.exec(function (err, untracked, stderr) {\n      if (err) {\n        return done(err);\n      }\n\n      done(null, parse.status(status, untracked));\n    });\n  });\n};\n/**\n* Returns the git status object\n* @param {array} flags\n*/\n\n\nRepository.prototype.statusSync = function (flags) {\n  var self = this;\n  var status = new Command(self, 'status', flags);\n  var lsFiles = new Command(self, 'ls-files', ['-o', '--exclude-standard']);\n  return parse.status(status.execSync(), lsFiles.execSync());\n};\n/**\n* Stages the passed array of files for commiting\n* @param {array} files\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.add = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var files = args[0];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'add', flags, files.join(' '));\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n/**\n* Stages the passed array of files for commiting\n* @param {array} files\n* @param {array} flags\n*/\n\n\nRepository.prototype.addSync = function (files, flags) {\n  var self = this;\n  var cmd = new Command(self, 'add', flags || [], files.join(' '));\n  return cmd.execSync();\n};\n/**\n* Removes the passed array of files from the repo for commiting\n* @param {array} files\n* @param {function} callback\n*/\n\n\nRepository.prototype.remove = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var files = args[0];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[1]) ? args[1] : ['--cached'];\n  var cmd = new Command(self, 'rm', flags, files.join(' '));\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      done(err);\n    }\n\n    done(null);\n  });\n};\n/**\n* Removes the passed array of files from the repo for commiting\n* @param {array} files\n* @param {array} flags\n*/\n\n\nRepository.prototype.removeSync = function (files, flags) {\n  var self = this;\n  var cmd = new Command(self, 'rm', flags || ['--cached'], files.join(' '));\n  return cmd.execSync();\n};\n/**\n* Unstages the passed array of files from the staging area\n* @param {array} files\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.unstage = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var files = args[0];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'reset HEAD', flags, files.join(' '));\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n/**\n* Unstages the passed array of files from the staging area\n* @param {array} files\n* @param {array} flags\n*/\n\n\nRepository.prototype.unstageSync = function (files, flags) {\n  var self = this;\n  var cmd = new Command(self, 'reset HEAD', flags || [], files.join(' '));\n  return cmd.execSync();\n};\n/**\n* Commits the staged area with the given message\n* @param {string} message\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.commit = function () {\n  var args = Array.prototype.slice.apply(arguments);\n  var message = args[0];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[1]) ? args[1].concat('-m') : ['-m'];\n  var cmd = new Command(this, 'commit', flags, '\"' + message + '\"');\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    var result = stdout ? parse.commit(stdout) : {};\n\n    if (result.error) {\n      return done(result.error);\n    }\n\n    done(null, result);\n  });\n};\n/**\n* Commits the staged area with the given message\n* @param {string} message\n* @param {array} flags\n*/\n\n\nRepository.prototype.commitSync = function (message, flags) {\n  var self = this;\n  flags = Array.isArray(flags) ? flags.push('-m') : ['-m'];\n  var cmd = new Command(this, 'commit', flags, '\"' + message + '\"');\n  var output = cmd.execSync();\n  var result = output ? parse.commit(output) : {};\n\n  if (result.error) {\n    throw new Error(result.error);\n  }\n\n  return result;\n};\n/**\n* Forwards object with the current branch and all others to the callback\n* @param {function} callback\n*/\n\n\nRepository.prototype.getBranches = function (callback) {\n  var self = this;\n\n  var done = callback || function () {};\n\n  var cmd = new Command(self, 'branch');\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null, parse.branch(stdout));\n  });\n};\n/**\n* Returns a denoted object with the current branch and all other branches\n* @param {function} callback\n*/\n\n\nRepository.prototype.getBranchesSync = function () {\n  var self = this;\n  var cmd = new Command(self, 'branch');\n  return parse.branch(cmd.execSync());\n};\n/**\n* Creates a new branch with the given branch name\n* @param {string} name\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.createBranch = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var name = args[0];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'branch', flags, name);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n/**\n* Creates a new branch with the given branch name\n* @param {string} name\n* @param {array} flags\n*/\n\n\nRepository.prototype.createBranchSync = function (name, flags) {\n  var self = this;\n  var cmd = new Command(self, 'branch', flags || [], name);\n  return cmd.execSync();\n};\n/**\n* Performs a git checkout on the given branch\n* @param {string} branch\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.checkout = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var branch = args[0];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'checkout', flags, branch);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    self.getBranches(done);\n  });\n};\n/**\n* Performs a git checkout on the given branch\n* @param {string} branch\n* @param {array} flags\n*/\n\n\nRepository.prototype.checkoutSync = function (branch, flags) {\n  var self = this;\n  var cmd = new Command(self, 'checkout', flags || [], branch);\n  cmd.execSync();\n  return self.getBranchesSync();\n};\n/**\n* Performs a git merge in the current branch against the specified one\n* @param {string} branch\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.merge = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var branch = args[0];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'merge', flags, branch);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n/**\n* Performs a git merge in the current branch against the specified one\n* @param {string} branch\n*/\n\n\nRepository.prototype.mergeSync = function (branch, flags) {\n  var self = this;\n  var cmd = new Command(self, 'merge', flags || [], branch);\n  return cmd.execSync();\n};\n/**\n* Forwards a array of repositorys'tags to the callback function\n* @param {function} callback\n*/\n\n\nRepository.prototype.getTags = function (callback) {\n  var self = this;\n\n  var done = callback || function () {};\n\n  var cmd = new Command(self, 'tag');\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null, parse.tag(stdout));\n  });\n};\n/**\n* Forwards a array of repositorys'tags to the callback function\n*/\n\n\nRepository.prototype.getTagsSync = function () {\n  var self = this;\n  var cmd = new Command(self, 'tag');\n  return parse.tag(cmd.execSync());\n};\n/**\n* Creates a new tag from the given tag name\n* @param {string} name\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.createTag = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var name = args[0];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'tag', flags, name);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n/**\n* Creates a new tag from the given tag name\n* @param {string} name\n* @param {array} flags\n*/\n\n\nRepository.prototype.createTagSync = function (name, flags) {\n  var self = this;\n  var cmd = new Command(self, 'tag', flags || [], name);\n  return cmd.execSync();\n};\n/**\n* Adds a new remote\n* @param {string} remote\n* @param {string} url\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.addRemote = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var url = args[1];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[2]) ? args[2] : [];\n  var cmd = new Command(self, 'remote add', flags, remote + ' ' + url);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n/**\n* Adds a new remote\n* @param {string} remote\n* @param {string} url\n* @param {array} flags\n*/\n\n\nRepository.prototype.addRemoteSync = function (remote, url, flags) {\n  var self = this;\n  var cmd = new Command(self, 'remote add', flags || [], remote + ' ' + url);\n  return cmd.execSync();\n};\n/**\n* Changes the URL of a existing remote\n* @param {string} remote\n* @param {string} url\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.setRemoteUrl = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var url = args[1];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[2]) ? args[2] : [];\n  var cmd = new Command(self, 'remote set-url', flags, remote + ' ' + url);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n/**\n* Changes the URL of a existing remote\n* @param {string} remote\n* @param {string} url\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.setRemoteUrlSync = function (remote, url, flags) {\n  var self = this;\n  var cmd = new Command(self, 'remote set-url', flags || [], remote + ' ' + url);\n  return cmd.execSync();\n};\n/**\n* Removes the given remote\n* @param {string} remote\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.removeRemote = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'remote rm', flags, remote);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n/**\n* Removes the given remote\n* @param {string} remote\n* @param {array} flags\n*/\n\n\nRepository.prototype.removeRemoteSync = function (remote, flags) {\n  var self = this;\n  var cmd = new Command(self, 'remote rm', flags || [], remote);\n  return cmd.execSync();\n};\n/**\n* Forwards a key-value list (remote : url) to the callback function\n* @param  {Function} callback\n*/\n\n\nRepository.prototype.getRemotes = function (callback) {\n  var self = this;\n\n  var done = callback || function () {};\n\n  var cmd = new Command(self, 'remote', ['-v']);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null, parse.remotes(stdout));\n  });\n};\n/**\n* Returns a key-value list (remote : url)\n* @param {function} callback\n*/\n\n\nRepository.prototype.getRemotesSync = function () {\n  var self = this;\n  var cmd = new Command(self, 'remote', ['-v']);\n  return parse.remotes(cmd.execSync());\n};\n/**\n* Performs a GIT push to the given remote for the given branch name\n* @param {string} remote\n* @param {string} branch\n* @param {array} flags\n* @param {object} creds\n* @param {function} callback\n*/\n\n\nRepository.prototype.push = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var branch = args[1];\n  var done = args.slice(-1).pop();\n  var flags = Array.isArray(args[2]) ? args[2] : null;\n  var creds = null;\n\n  if (flags && args[3].username) {\n    creds = args[3];\n  } else if (args[2] && args[2].username) {\n    creds = args[2];\n  }\n\n  return sync(self, {\n    operation: 'push',\n    remote: remote,\n    branch: branch,\n    flags: flags,\n    credentials: creds || {\n      username: null,\n      password: null\n    }\n  }, done);\n};\n/**\n* Performs a GIT pull from the given remote with the given branch name\n* @param {string} remote\n* @param {string} branch\n* @param {array} flags\n* @param {object} creds\n* @param {function} callback\n*/\n\n\nRepository.prototype.pull = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var branch = args[1];\n  var done = args.slice(-1).pop();\n  var flags = Array.isArray(args[2]) ? args[2] : null;\n  var creds = null;\n\n  if (flags && args[3].username) {\n    creds = args[3];\n  } else if (args[2].username) {\n    creds = args[2];\n  }\n\n  return sync(this, {\n    operation: 'pull',\n    remote: remote,\n    branch: branch,\n    flags: flags,\n    credentials: creds || {\n      username: null,\n      password: null\n    }\n  }, done);\n};\n/**\n* Performs a git fetch from the given remote\n* @param {string} remote\n* @param {array} flags\n* @param {function} callback\n*/\n\n\nRepository.prototype.fetch = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var done = args.slice(-1).pop();\n  var cmd = new Command(self, 'fetch', [flags].concat(remote));\n  cmd.exec(done);\n};\n\nfunction sync(repo, opts, callback) {\n  var done = callback || function () {};\n\n  var flags = opts.flags || [];\n  var creds = opts.credentials;\n  var options = [opts.remote, opts.branch].concat(flags);\n  var cmd = new Command(repo, opts.operation, options);\n  cmd.exec(function (err, stdout, stderr) {\n    done(err);\n  });\n}\n/**\n* Resets the repository's HEAD to the specified commit\n* @param {string} hash\n* @param {function} callback\n*/\n\n\nRepository.prototype.reset = function (hash, callback) {\n  var self = this;\n\n  var done = callback || function () {};\n\n  var cmd = new Command(self, 'reset', ['--hard'], hash);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    self.log(function (err, log) {\n      if (err) {\n        return done(err);\n      }\n\n      done(null, log);\n    });\n  });\n};\n/**\n* Resets the repository's HEAD to the specified commit\n* @param {string} hash\n*/\n\n\nRepository.prototype.resetSync = function (hash) {\n  var self = this;\n  var cmd = new Command(self, 'reset', ['--hard'], hash);\n  cmd.execSync();\n  return self.logSync();\n};\n/**\n* Forwards the current commit hash to the callback function\n* @param {function} callback\n*/\n\n\nRepository.prototype.describe = function (callback) {\n  var self = this;\n\n  var done = callback || function () {};\n\n  var cmd = new Command(self, 'describe', ['--always']);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null, stdout);\n  });\n};\n/**\n* Returns the current commit hash\n*/\n\n\nRepository.prototype.describeSync = function () {\n  var self = this;\n  var cmd = new Command(self, 'describe', ['--always']);\n  return cmd.execSync();\n};\n/**\n* Allows cherry-picking\n* @param {string} commit - commit hash\n* @param {function} callback\n* @param {array} flags\n*/\n\n\nRepository.prototype.cherryPick = function () {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var commit = args[0];\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'cherry-pick', flags, commit);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n/**\n* Allows cherry-picking\n* @param {string} commit - commit hash\n* @param {function} callback\n* @param {array} flags\n*/\n\n\nRepository.prototype.cherryPickSync = function (commit, flags) {\n  var self = this;\n  var cmd = new Command(self, 'cherry-pick', flags || [], commit);\n  return cmd.execSync();\n};\n/**\n* Allows show\n* @param {string} commit\n* @param {string} filePath - full path of the file relative to the repo\n* @param {function} callback\n*/\n\n\nRepository.prototype.show = function (commit, filePath, callback) {\n  var self = this;\n\n  var done = callback || function () {};\n\n  var revision = commit + ':' + filePath;\n  var cmd = new Command(self, 'show', [], revision);\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null, stdout);\n  });\n};\n/**\n* Allows show\n* @param {string} commit - commit hash\n* @param {string} filePath - full path of the file relative to the repo\n*/\n\n\nRepository.prototype.showSync = function (commit, filePath) {\n  var self = this;\n  var revision = commit + ':' + filePath;\n  var cmd = new Command(self, 'show', [], revision);\n  return cmd.execSync();\n};\n/**\n * Allows stashing uncommited files\n * @param  {array} options\n * @param  {Function} callback\n */\n\n\nRepository.prototype.stash = function (opt, callback) {\n  var self = this;\n  var options = opt && opt.join(' ');\n\n  var done = callback || function () {};\n\n  var cmd = new Command(self, 'stash', [], options || '');\n  cmd.exec(function (err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null, stdout);\n  });\n};\n/**\n * Allows stashing uncommited files\n * @param  {array} options\n */\n\n\nRepository.prototype.stashSync = function (opt) {\n  var self = this;\n  var options = opt && opt.join(' ');\n  var cmd = new Command(self, 'stash', [], options || '');\n  return cmd.execSync();\n};\n/**\n* Handles the global git configuration\n* @function\n* @param {string} key\n* @param {string} val\n* @param {function} callback\n*/\n\n\nRepository.setConfig = function (key, val, callback) {\n  var cmd = new Command(null, 'config', ['--global', key], '\"' + val + '\"');\n\n  var done = callback || function () {};\n\n  cmd.exec(function (err, stdout, stderr) {\n    done(err || null);\n  });\n};\n/**\n* Handles the global git configuration\n* @function\n* @param {string} key\n* @param {string} val\n* @param {function} callback\n*/\n\n\nRepository.setConfigSync = function (key, val) {\n  var cmd = new Command(null, 'config', ['--global', key], '\"' + val + '\"');\n  return cmd.execSync();\n};\n/**\n* Handles the global git configuration\n* @function\n* @param {string} key\n* @param {function} callback\n*/\n\n\nRepository.getConfig = function (key, callback) {\n  var cmd = new Command(null, 'config', ['--global', key]);\n\n  var done = callback || function () {};\n\n  cmd.exec(function (err, stdout, stderr) {\n    done(err || null, stdout);\n  });\n};\n/**\n* Handles the global git configuration\n* @function\n* @param {string} key\n* @param {function} callback\n*/\n\n\nRepository.getConfigSync = function (key) {\n  var cmd = new Command(null, 'config', ['--global', key]);\n  return cmd.execSync();\n};\n/**\n* Wrapper for the git clone function\n* @function\n* @param {string} path\n* @param {string} url\n* @param {object} creds\n* @param {function} callback\n*/\n\n\nRepository.clone = function (path, url) {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var creds = args[2].username ? args[2] : {};\n\n  var done = args.slice(-1).pop() || function () {};\n\n  var clone = new Command(null, 'clone', [url, path]);\n  var error = null;\n  clone.exec(function (err, stdout, stderr) {\n    done(err);\n  });\n};\n\nmodule.exports = Repository;","map":{"version":3,"names":["fs","require","path","util","utils","Command","parse","events","logFmt","platform","Repository","repo","gitpathOrOpts","self","EventEmitter","call","isString","gitpath","normalize","isObject","opts","largeOperations","largeOperationsMaxBuffer","_ready","name","basename","exists","initialized","emit","inherits","prototype","init","args","Array","slice","apply","arguments","flags","isArray","done","pop","cmd","exec","err","stdout","stderr","Error","initSync","execSync","log","logSync","branch","status","lsFiles","untracked","statusSync","add","files","join","addSync","remove","removeSync","unstage","unstageSync","commit","message","concat","result","error","commitSync","push","output","getBranches","callback","getBranchesSync","createBranch","createBranchSync","checkout","checkoutSync","merge","mergeSync","getTags","tag","getTagsSync","createTag","createTagSync","addRemote","remote","url","addRemoteSync","setRemoteUrl","setRemoteUrlSync","removeRemote","removeRemoteSync","getRemotes","remotes","getRemotesSync","creds","username","sync","operation","credentials","password","pull","fetch","options","reset","hash","resetSync","describe","describeSync","cherryPick","cherryPickSync","show","filePath","revision","showSync","stash","opt","stashSync","setConfig","key","val","setConfigSync","getConfig","getConfigSync","clone","module","exports"],"sources":["/Users/robinlaws/Documents/ASDTERM3/CP3540 Applied ASD Project /React-Movie-Reviews/movie-reviews/node_modules/gitty/lib/repository.js"],"sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar util = require('util');\nvar utils = require('./utils');\nvar Command = require('./command');\nvar parse = require('./parser');\nvar events = require('events');\nvar logFmt = '--pretty=format:\\'{\"commit\":\"%H\",\"author\":\"%an <%ae>\",' +\n             '\"date\":\"%ad\",\"message\":\"%s\"}\\',';\nif (require('os').platform() === 'win32') {\n\tlogFmt = '--pretty=format:{\\\\\"commit\\\\\":\\\\\"\"%H\"\\\\\",\\\\\"author\\\\\":\\\\\"\"%an ^<%ae^>\"\\\\\",' +\n             '\\\\\"date\\\\\":\\\\\"%ad\\\\\",\\\\\"message\\\\\":\\\\\"%s\\\\\"},';\n}\n\n/**\n* Represents a Git repository.\n* Requires 'repo' string identifying the local repository directory.\n* Accepts optional 'gitpathOrOpts' that may be a string identifying the\n* path to the native git client or an object containing an optional\n* 'gitpath' property, an optional 'largeOperations' property, and an\n* optional 'largeOperationsMaxBuffer'.\n* {\n*   gitpath: a string representing the path to the git client\n*   largeOperations: array of strings identifying large operations\n*   largeOperationsMaxBuffer: number, default is 1024 * 5000\n* }\n* @constructor\n* @param {string} repo\n* @param {string|object} gitpathOrOpts a 'gitpath' string or opts object\n*/\nvar Repository = function(repo, gitpathOrOpts) {\n  if (!(this instanceof Repository)) {\n    return new Repository(repo, gitpathOrOpts);\n  }\n\n  var self = this;\n\n  events.EventEmitter.call(this);\n\n  if (utils.isString(gitpathOrOpts)) { // interpret 'opts' string as gitpath\n    self.gitpath = path.normalize(gitpathOrOpts);\n  }\n  if (utils.isObject(gitpathOrOpts)) {\n    var opts = gitpathOrOpts;\n    if (opts.gitpath) {\n      self.gitpath = path.normalize(opts.gitpath);\n    }\n    self.largeOperations = opts.largeOperations;\n    self.largeOperationsMaxBuffer = opts.largeOperationsMaxBuffer;\n  }\n  self.path = path.normalize(repo);\n  self._ready = false;\n  self.name = path.basename(self.path);\n\n  // apply defaults\n  self.gitpath = self.gitpath || '';\n  self.largeOperations = self.largeOperations || ['log', 'ls-files'];\n  self.largeOperationsMaxBuffer = self.largeOperationsMaxBuffer || 1024 * 5000;\n\n  fs.exists(self.path + '/.git', function(exists) {\n    self.initialized = exists;\n    self._ready = true;\n\n    self.emit('ready');\n  });\n};\n\nutil.inherits(Repository, events.EventEmitter);\n\n/**\n* Initializes the given directory as a git repository\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.init = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var flags = Array.isArray(args[0]) ? args[0] : [];\n  var done = args.slice(-1).pop() || function() { };\n  var cmd = new Command(self, 'init', flags, '');\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err || new Error(stderr));\n    }\n\n    self.initialized = true;\n\n    done();\n  });\n};\n\n/**\n* Initializes the given directory as a git repository\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.initSync = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var flags = Array.isArray(args[0]) ? args[0] : [];\n  var cmd = new Command(self, 'init', flags, '');\n\n  cmd.execSync();\n\n  self.initialized = true;\n\n  return self.initialized;\n};\n\n/**\n* Forwards the commit history to the callback function\n* @param {string} path - optional branch or path\n* @param {function} callback\n*/\nRepository.prototype.log = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var path = typeof args[0] === 'string' ? args[0] : '';\n  var done = args.slice(-1).pop() || function() { };\n  var cmd = new Command(self, 'log', [logFmt, path]);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err || stderr) {\n      return done(err || new Error(stderr));\n    }\n\n    done(null, parse.log(stdout));\n  });\n};\n\n/**\n* Returns the commit history\n* @param {string} branch\n*/\nRepository.prototype.logSync = function(branch) {\n  var self = this;\n  var cmd = new Command(self, 'log', [logFmt, branch || '']);\n\n  return parse.log(cmd.execSync());\n};\n\n/**\n* Forwards the git status object to the callback function\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.status = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[0]) ? args[0] : [];\n  var status = new Command(self, 'status', flags);\n  var lsFiles = new Command(self, 'ls-files', ['-o','--exclude-standard']);\n\n  status.exec(function(err, status, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    lsFiles.exec(function(err, untracked, stderr) {\n      if (err) {\n        return done(err);\n      }\n\n      done(null, parse.status(status, untracked));\n    });\n  });\n};\n\n/**\n* Returns the git status object\n* @param {array} flags\n*/\nRepository.prototype.statusSync = function(flags) {\n  var self = this;\n  var status = new Command(self, 'status', flags);\n  var lsFiles = new Command(self, 'ls-files', ['-o','--exclude-standard']);\n\n  return parse.status(status.execSync(), lsFiles.execSync());\n};\n\n/**\n* Stages the passed array of files for commiting\n* @param {array} files\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.add = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var files = args[0];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'add', flags, files.join(' '));\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n\n/**\n* Stages the passed array of files for commiting\n* @param {array} files\n* @param {array} flags\n*/\nRepository.prototype.addSync = function(files, flags) {\n  var self = this;\n  var cmd = new Command(self, 'add', flags || [], files.join(' '));\n\n  return cmd.execSync();\n};\n\n/**\n* Removes the passed array of files from the repo for commiting\n* @param {array} files\n* @param {function} callback\n*/\nRepository.prototype.remove = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var files = args[0];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[1]) ? args[1] : ['--cached'];\n  var cmd = new Command(self, 'rm', flags, files.join(' '));\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      done(err);\n    }\n\n    done(null);\n  });\n};\n\n/**\n* Removes the passed array of files from the repo for commiting\n* @param {array} files\n* @param {array} flags\n*/\nRepository.prototype.removeSync = function(files, flags) {\n  var self = this;\n  var cmd = new Command(self, 'rm', flags || ['--cached'], files.join(' '));\n\n  return cmd.execSync();\n};\n\n/**\n* Unstages the passed array of files from the staging area\n* @param {array} files\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.unstage = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var files = args[0];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'reset HEAD', flags, files.join(' '));\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n\n/**\n* Unstages the passed array of files from the staging area\n* @param {array} files\n* @param {array} flags\n*/\nRepository.prototype.unstageSync = function(files, flags) {\n  var self = this;\n  var cmd = new Command(self, 'reset HEAD', flags || [], files.join(' '));\n\n  return cmd.execSync();\n};\n\n/**\n* Commits the staged area with the given message\n* @param {string} message\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.commit = function() {\n  var args = Array.prototype.slice.apply(arguments);\n  var message = args[0];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[1]) ? args[1].concat('-m') : ['-m'];\n  var cmd = new Command(this, 'commit', flags, '\"' + message + '\"');\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    var result = stdout ? parse.commit(stdout) : {};\n\n    if (result.error) {\n      return done(result.error);\n    }\n\n    done(null, result);\n  });\n};\n\n/**\n* Commits the staged area with the given message\n* @param {string} message\n* @param {array} flags\n*/\nRepository.prototype.commitSync = function(message, flags) {\n  var self = this;\n  flags = Array.isArray(flags) ? flags.push('-m') : ['-m'];\n  var cmd = new Command(this, 'commit', flags, '\"' + message + '\"');\n  var output = cmd.execSync();\n  var result = output ? parse.commit(output) : {};\n\n  if (result.error) {\n    throw new Error(result.error);\n  }\n\n  return result;\n};\n\n/**\n* Forwards object with the current branch and all others to the callback\n* @param {function} callback\n*/\nRepository.prototype.getBranches = function(callback) {\n  var self = this;\n  var done = callback || function() { };\n  var cmd = new Command(self, 'branch');\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null, parse.branch(stdout));\n  });\n};\n\n/**\n* Returns a denoted object with the current branch and all other branches\n* @param {function} callback\n*/\nRepository.prototype.getBranchesSync = function() {\n  var self = this;\n  var cmd = new Command(self, 'branch');\n\n  return parse.branch(cmd.execSync());\n};\n\n/**\n* Creates a new branch with the given branch name\n* @param {string} name\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.createBranch = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var name = args[0];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'branch', flags, name);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n\n/**\n* Creates a new branch with the given branch name\n* @param {string} name\n* @param {array} flags\n*/\nRepository.prototype.createBranchSync = function(name, flags) {\n  var self = this;\n  var cmd = new Command(self, 'branch', flags || [], name);\n\n  return cmd.execSync();\n};\n\n/**\n* Performs a git checkout on the given branch\n* @param {string} branch\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.checkout = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var branch = args[0];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'checkout', flags, branch);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    self.getBranches(done);\n  });\n};\n\n/**\n* Performs a git checkout on the given branch\n* @param {string} branch\n* @param {array} flags\n*/\nRepository.prototype.checkoutSync = function(branch, flags) {\n  var self = this;\n  var cmd = new Command(self, 'checkout', flags || [], branch);\n\n  cmd.execSync();\n\n  return self.getBranchesSync();\n};\n\n/**\n* Performs a git merge in the current branch against the specified one\n* @param {string} branch\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.merge = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var branch = args[0];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'merge', flags, branch);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n\n/**\n* Performs a git merge in the current branch against the specified one\n* @param {string} branch\n*/\nRepository.prototype.mergeSync = function(branch, flags) {\n  var self = this;\n  var cmd = new Command(self, 'merge', flags || [], branch);\n\n  return cmd.execSync();\n};\n\n/**\n* Forwards a array of repositorys'tags to the callback function\n* @param {function} callback\n*/\nRepository.prototype.getTags = function(callback) {\n  var self = this;\n  var done = callback || function() { };\n  var cmd = new Command(self, 'tag');\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null, parse.tag(stdout));\n  });\n};\n\n/**\n* Forwards a array of repositorys'tags to the callback function\n*/\nRepository.prototype.getTagsSync = function() {\n  var self = this;\n  var cmd = new Command(self, 'tag');\n\n  return parse.tag(cmd.execSync());\n};\n\n/**\n* Creates a new tag from the given tag name\n* @param {string} name\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.createTag = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var name = args[0];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'tag', flags, name);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n\n/**\n* Creates a new tag from the given tag name\n* @param {string} name\n* @param {array} flags\n*/\nRepository.prototype.createTagSync = function(name, flags) {\n  var self = this;\n  var cmd = new Command(self, 'tag', flags || [], name);\n\n  return cmd.execSync();\n};\n\n/**\n* Adds a new remote\n* @param {string} remote\n* @param {string} url\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.addRemote = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var url = args[1];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[2]) ? args[2] : [];\n  var cmd = new Command(self, 'remote add', flags, remote + ' ' + url);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n\n/**\n* Adds a new remote\n* @param {string} remote\n* @param {string} url\n* @param {array} flags\n*/\nRepository.prototype.addRemoteSync = function(remote, url, flags) {\n  var self = this;\n  var cmd = new Command(self, 'remote add', flags || [], remote + ' ' + url);\n\n  return cmd.execSync();\n};\n\n/**\n* Changes the URL of a existing remote\n* @param {string} remote\n* @param {string} url\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.setRemoteUrl = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var url = args[1];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[2]) ? args[2] : [];\n  var cmd = new Command(self, 'remote set-url', flags, remote + ' ' + url);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n\n/**\n* Changes the URL of a existing remote\n* @param {string} remote\n* @param {string} url\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.setRemoteUrlSync = function(remote, url, flags) {\n  var self = this;\n  var cmd = new Command(self, 'remote set-url', flags || [], remote + ' ' + url);\n\n  return cmd.execSync();\n};\n\n/**\n* Removes the given remote\n* @param {string} remote\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.removeRemote = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd = new Command(self, 'remote rm', flags, remote);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n\n/**\n* Removes the given remote\n* @param {string} remote\n* @param {array} flags\n*/\nRepository.prototype.removeRemoteSync = function(remote, flags) {\n  var self = this;\n  var cmd = new Command(self, 'remote rm', flags || [], remote);\n\n  return cmd.execSync();\n};\n\n/**\n* Forwards a key-value list (remote : url) to the callback function\n* @param  {Function} callback\n*/\nRepository.prototype.getRemotes = function(callback) {\n  var self = this;\n  var done = callback || function() { };\n  var cmd = new Command(self, 'remote', ['-v']);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null, parse.remotes(stdout));\n  });\n};\n\n/**\n* Returns a key-value list (remote : url)\n* @param {function} callback\n*/\nRepository.prototype.getRemotesSync = function() {\n  var self = this;\n  var cmd = new Command(self, 'remote', ['-v']);\n\n  return parse.remotes(cmd.execSync());\n};\n\n/**\n* Performs a GIT push to the given remote for the given branch name\n* @param {string} remote\n* @param {string} branch\n* @param {array} flags\n* @param {object} creds\n* @param {function} callback\n*/\nRepository.prototype.push = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var branch = args[1];\n  var done = args.slice(-1).pop();\n  var flags = Array.isArray(args[2]) ? args[2] : null;\n  var creds = null;\n\n  if (flags && args[3].username) {\n    creds = args[3];\n  }\n  else if (args[2] && args[2].username) {\n    creds = args[2];\n  }\n\n  return sync(self, {\n    operation: 'push',\n    remote: remote,\n    branch: branch,\n    flags: flags,\n    credentials: creds || { username: null, password: null }\n  }, done);\n};\n\n/**\n* Performs a GIT pull from the given remote with the given branch name\n* @param {string} remote\n* @param {string} branch\n* @param {array} flags\n* @param {object} creds\n* @param {function} callback\n*/\nRepository.prototype.pull = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var branch = args[1];\n  var done = args.slice(-1).pop();\n  var flags = Array.isArray(args[2]) ? args[2] : null;\n  var creds = null;\n\n  if (flags && args[3].username) {\n    creds = args[3];\n  }\n  else if (args[2].username) {\n    creds = args[2];\n  }\n\n  return sync(this, {\n    operation: 'pull',\n    remote: remote,\n    branch: branch,\n    flags: flags,\n    credentials: creds || { username: null, password: null }\n  }, done);\n};\n\n/**\n* Performs a git fetch from the given remote\n* @param {string} remote\n* @param {array} flags\n* @param {function} callback\n*/\nRepository.prototype.fetch = function() {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var remote = args[0];\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var done = args.slice(-1).pop();\n  var cmd = new Command(self, 'fetch', [flags].concat(remote));\n\n  cmd.exec(done);\n};\n\nfunction sync(repo, opts, callback) {\n  var done = callback || function() { };\n  var flags = opts.flags || [];\n  var creds = opts.credentials;\n  var options = [opts.remote, opts.branch].concat(flags);\n  var cmd = new Command(repo, opts.operation, options);\n\n  cmd.exec(function(err, stdout, stderr) {\n    done(err);\n  });\n}\n\n/**\n* Resets the repository's HEAD to the specified commit\n* @param {string} hash\n* @param {function} callback\n*/\nRepository.prototype.reset = function(hash, callback) {\n  var self = this;\n  var done = callback || function() { };\n  var cmd = new Command(self, 'reset', ['--hard'], hash);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    self.log(function(err, log) {\n      if (err) {\n        return done(err);\n      }\n\n      done(null, log);\n    });\n  });\n};\n\n/**\n* Resets the repository's HEAD to the specified commit\n* @param {string} hash\n*/\nRepository.prototype.resetSync = function(hash) {\n  var self = this;\n  var cmd = new Command(self, 'reset', ['--hard'], hash);\n\n  cmd.execSync();\n\n  return self.logSync();\n};\n\n/**\n* Forwards the current commit hash to the callback function\n* @param {function} callback\n*/\nRepository.prototype.describe = function(callback) {\n  var self = this;\n  var done = callback || function() { };\n  var cmd = new Command(self, 'describe', ['--always']);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null, stdout);\n  });\n};\n\n/**\n* Returns the current commit hash\n*/\nRepository.prototype.describeSync = function() {\n  var self = this;\n  var cmd = new Command(self, 'describe', ['--always']);\n\n  return cmd.execSync();\n};\n\n/**\n* Allows cherry-picking\n* @param {string} commit - commit hash\n* @param {function} callback\n* @param {array} flags\n*/\nRepository.prototype.cherryPick = function() {\n  var self = this;  var args = Array.prototype.slice.apply(arguments);\n  var commit = args[0];\n  var done = args.slice(-1).pop() || function() { };\n  var flags = Array.isArray(args[1]) ? args[1] : [];\n  var cmd  = new Command(self, 'cherry-pick', flags, commit);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n\n    done(null);\n  });\n};\n\n/**\n* Allows cherry-picking\n* @param {string} commit - commit hash\n* @param {function} callback\n* @param {array} flags\n*/\nRepository.prototype.cherryPickSync = function(commit, flags) {\n  var self = this;\n  var cmd = new Command(self, 'cherry-pick', flags || [], commit);\n\n  return cmd.execSync();\n};\n\n/**\n* Allows show\n* @param {string} commit\n* @param {string} filePath - full path of the file relative to the repo\n* @param {function} callback\n*/\nRepository.prototype.show = function(commit, filePath, callback) {\n  var self = this;\n  var done = callback || function() { };\n  var revision = commit + ':' + filePath;\n  var cmd  = new Command(self, 'show', [], revision);\n\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n    done(null, stdout);\n  });\n};\n\n/**\n* Allows show\n* @param {string} commit - commit hash\n* @param {string} filePath - full path of the file relative to the repo\n*/\nRepository.prototype.showSync = function(commit, filePath) {\n  var self = this;\n  var revision = commit + ':' + filePath;\n  var cmd = new Command(self, 'show', [], revision);\n\n  return cmd.execSync();\n};\n\n/**\n * Allows stashing uncommited files\n * @param  {array} options\n * @param  {Function} callback\n */\nRepository.prototype.stash = function(opt, callback){\n  var self = this;\n  var options = opt && opt.join(' ');\n  var done = callback || function() { };\n  var cmd = new Command(self, 'stash', [], options || '');\n  cmd.exec(function(err, stdout, stderr) {\n    if (err) {\n      return done(err);\n    }\n    done(null, stdout);\n  });\n};\n\n/**\n * Allows stashing uncommited files\n * @param  {array} options\n */\nRepository.prototype.stashSync = function(opt){\n  var self = this;\n  var options = opt && opt.join(' ');\n  var cmd = new Command(self, 'stash', [], options || '');\n  return cmd.execSync();\n};\n\n/**\n* Handles the global git configuration\n* @function\n* @param {string} key\n* @param {string} val\n* @param {function} callback\n*/\nRepository.setConfig = function(key, val, callback) {\n  var cmd = new Command(null, 'config', ['--global', key], '\"' + val + '\"');\n  var done = callback || function() {};\n\n  cmd.exec(function(err, stdout, stderr) {\n    done(err || null);\n  });\n};\n\n/**\n* Handles the global git configuration\n* @function\n* @param {string} key\n* @param {string} val\n* @param {function} callback\n*/\nRepository.setConfigSync = function(key, val) {\n  var cmd = new Command(null, 'config', ['--global', key], '\"' + val + '\"');\n\n  return cmd.execSync();\n};\n\n/**\n* Handles the global git configuration\n* @function\n* @param {string} key\n* @param {function} callback\n*/\nRepository.getConfig = function(key, callback) {\n  var cmd = new Command(null, 'config', ['--global', key]);\n  var done = callback || function() {};\n\n  cmd.exec(function(err, stdout, stderr) {\n    done(err || null, stdout);\n  });\n};\n\n/**\n* Handles the global git configuration\n* @function\n* @param {string} key\n* @param {function} callback\n*/\nRepository.getConfigSync = function(key) {\n  var cmd = new Command(null, 'config', ['--global', key]);\n\n  return cmd.execSync();\n};\n\n/**\n* Wrapper for the git clone function\n* @function\n* @param {string} path\n* @param {string} url\n* @param {object} creds\n* @param {function} callback\n*/\nRepository.clone = function(path, url) {\n  var self = this;\n  var args = Array.prototype.slice.apply(arguments);\n  var creds = args[2].username ? args[2] : {};\n  var done = args.slice(-1).pop() || function() {};\n  var clone = new Command(null, 'clone', [url, path]);\n  var error = null;\n\n  clone.exec(function(err, stdout, stderr) {\n    done(err);\n  });\n};\n\nmodule.exports = Repository;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}