{"ast":null,"code":"'use strict';\n/**\n * Module dependencies\n */\n\nvar utils = require('lazy-cache')(require);\n/**\n * Temporarily re-assign `require` to trick browserify and\n * webpack into reconizing lazy dependencies.\n *\n * This tiny bit of ugliness has the huge dual advantage of\n * only loading modules that are actually called at some\n * point in the lifecycle of the application, whilst also\n * allowing browserify and webpack to find modules that\n * are depended on but never actually called.\n */\n\n\nvar fn = require;\nrequire = utils;\n/**\n * Lazily required module dependencies\n */\n\nrequire('gitty');\n\nrequire('resolve-dir');\n\nrequire('object-visit');\n\nrequire('set-value', 'set');\n\nrequire('get-value', 'get');\n\nrequire('mkdirp');\n\nrequire('delete');\n\nrequire('write');\n/**\n * Restore `require`\n */\n\n\nrequire = fn;\n/**\n * Create the key to use for getting and setting values.\n * If the key contains a filepath, and the filepath has\n * dots in it, we need to escape them to ensure that\n * `set-value` doesn't split on those dots.\n */\n\nutils.toKey = function (fp, key) {\n  if (typeof fp !== 'string') {\n    throw new TypeError('expected fp to be a string');\n  }\n\n  fp = fp.split('.').join('\\\\.');\n  return fp + (key ? '.' + key : '');\n};\n/**\n * Expose `utils` modules\n */\n\n\nmodule.exports = utils;","map":{"version":3,"names":["utils","require","fn","toKey","fp","key","TypeError","split","join","module","exports"],"sources":["/Users/robinlaws/Documents/ASDTERM3/CP3540 Applied ASD Project /React-Movie-Reviews/movie-reviews/node_modules/filebase/utils.js"],"sourcesContent":["'use strict';\n\n/**\n * Module dependencies\n */\n\nvar utils = require('lazy-cache')(require);\n\n/**\n * Temporarily re-assign `require` to trick browserify and\n * webpack into reconizing lazy dependencies.\n *\n * This tiny bit of ugliness has the huge dual advantage of\n * only loading modules that are actually called at some\n * point in the lifecycle of the application, whilst also\n * allowing browserify and webpack to find modules that\n * are depended on but never actually called.\n */\n\nvar fn = require;\nrequire = utils;\n\n/**\n * Lazily required module dependencies\n */\n\nrequire('gitty');\nrequire('resolve-dir');\nrequire('object-visit');\nrequire('set-value', 'set');\nrequire('get-value', 'get');\nrequire('mkdirp');\nrequire('delete');\nrequire('write');\n\n/**\n * Restore `require`\n */\n\nrequire = fn;\n\n/**\n * Create the key to use for getting and setting values.\n * If the key contains a filepath, and the filepath has\n * dots in it, we need to escape them to ensure that\n * `set-value` doesn't split on those dots.\n */\n\nutils.toKey = function(fp, key) {\n  if (typeof fp !== 'string') {\n    throw new TypeError('expected fp to be a string');\n  }\n  fp = fp.split('.').join('\\\\.');\n  return fp + (key ? ('.' + key) : '');\n};\n\n/**\n * Expose `utils` modules\n */\n\nmodule.exports = utils;\n"],"mappings":"AAAA;AAEA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAD,CAAP,CAAsBA,OAAtB,CAAZ;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,EAAE,GAAGD,OAAT;AACAA,OAAO,GAAGD,KAAV;AAEA;AACA;AACA;;AAEAC,OAAO,CAAC,OAAD,CAAP;;AACAA,OAAO,CAAC,aAAD,CAAP;;AACAA,OAAO,CAAC,cAAD,CAAP;;AACAA,OAAO,CAAC,WAAD,EAAc,KAAd,CAAP;;AACAA,OAAO,CAAC,WAAD,EAAc,KAAd,CAAP;;AACAA,OAAO,CAAC,QAAD,CAAP;;AACAA,OAAO,CAAC,QAAD,CAAP;;AACAA,OAAO,CAAC,OAAD,CAAP;AAEA;AACA;AACA;;;AAEAA,OAAO,GAAGC,EAAV;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEAF,KAAK,CAACG,KAAN,GAAc,UAASC,EAAT,EAAaC,GAAb,EAAkB;EAC9B,IAAI,OAAOD,EAAP,KAAc,QAAlB,EAA4B;IAC1B,MAAM,IAAIE,SAAJ,CAAc,4BAAd,CAAN;EACD;;EACDF,EAAE,GAAGA,EAAE,CAACG,KAAH,CAAS,GAAT,EAAcC,IAAd,CAAmB,KAAnB,CAAL;EACA,OAAOJ,EAAE,IAAIC,GAAG,GAAI,MAAMA,GAAV,GAAiB,EAAxB,CAAT;AACD,CAND;AAQA;AACA;AACA;;;AAEAI,MAAM,CAACC,OAAP,GAAiBV,KAAjB"},"metadata":{},"sourceType":"script"}