{"ast":null,"code":"'use strict';\n/**\n * Parse the content of a passwd file into a list of user objects.\n * This function ignores blank lines and comments.\n *\n * ```js\n * // assuming '/etc/passwd' contains:\n * // doowb:*:123:123:Brian Woodward:/Users/doowb:/bin/bash\n * console.log(parse(fs.readFileSync('/etc/passwd', 'utf8')));\n *\n * //=> [\n * //=>   {\n * //=>     username: 'doowb',\n * //=>     password: '*',\n * //=>     uid: '123',\n * //=>     gid: '123',\n * //=>     gecos: 'Brian Woodward',\n * //=>     homedir: '/Users/doowb',\n * //=>     shell: '/bin/bash'\n * //=>   }\n * //=> ]\n * ```\n * @param  {String} `content` Content of a passwd file to parse.\n * @return {Array} Array of user objects parsed from the content.\n * @api public\n */\n\nmodule.exports = function (content) {\n  if (typeof content !== 'string') {\n    throw new Error('expected a string');\n  }\n\n  return content.split('\\n').map(user).filter(Boolean);\n};\n\nfunction user(line, i) {\n  if (!line || !line.length || line.charAt(0) === '#') {\n    return null;\n  } // see https://en.wikipedia.org/wiki/Passwd for field descriptions\n\n\n  var fields = line.split(':');\n  return {\n    username: fields[0],\n    password: fields[1],\n    uid: fields[2],\n    gid: fields[3],\n    // see https://en.wikipedia.org/wiki/Gecos_field for GECOS field descriptions\n    gecos: fields[4],\n    homedir: fields[5],\n    shell: fields[6]\n  };\n}","map":{"version":3,"names":["module","exports","content","Error","split","map","user","filter","Boolean","line","i","length","charAt","fields","username","password","uid","gid","gecos","homedir","shell"],"sources":["/Users/robinlaws/Documents/ASDTERM3/CP3540 Applied ASD Project /React-Movie-Reviews/movie-reviews/node_modules/parse-passwd/index.js"],"sourcesContent":["'use strict';\n\n/**\n * Parse the content of a passwd file into a list of user objects.\n * This function ignores blank lines and comments.\n *\n * ```js\n * // assuming '/etc/passwd' contains:\n * // doowb:*:123:123:Brian Woodward:/Users/doowb:/bin/bash\n * console.log(parse(fs.readFileSync('/etc/passwd', 'utf8')));\n *\n * //=> [\n * //=>   {\n * //=>     username: 'doowb',\n * //=>     password: '*',\n * //=>     uid: '123',\n * //=>     gid: '123',\n * //=>     gecos: 'Brian Woodward',\n * //=>     homedir: '/Users/doowb',\n * //=>     shell: '/bin/bash'\n * //=>   }\n * //=> ]\n * ```\n * @param  {String} `content` Content of a passwd file to parse.\n * @return {Array} Array of user objects parsed from the content.\n * @api public\n */\n\nmodule.exports = function(content) {\n  if (typeof content !== 'string') {\n    throw new Error('expected a string');\n  }\n  return content\n    .split('\\n')\n    .map(user)\n    .filter(Boolean);\n};\n\nfunction user(line, i) {\n  if (!line || !line.length || line.charAt(0) === '#') {\n    return null;\n  }\n\n  // see https://en.wikipedia.org/wiki/Passwd for field descriptions\n  var fields = line.split(':');\n  return {\n    username: fields[0],\n    password: fields[1],\n    uid: fields[2],\n    gid: fields[3],\n    // see https://en.wikipedia.org/wiki/Gecos_field for GECOS field descriptions\n    gecos: fields[4],\n    homedir: fields[5],\n    shell: fields[6]\n  };\n}\n"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAASC,OAAT,EAAkB;EACjC,IAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;IAC/B,MAAM,IAAIC,KAAJ,CAAU,mBAAV,CAAN;EACD;;EACD,OAAOD,OAAO,CACXE,KADI,CACE,IADF,EAEJC,GAFI,CAEAC,IAFA,EAGJC,MAHI,CAGGC,OAHH,CAAP;AAID,CARD;;AAUA,SAASF,IAAT,CAAcG,IAAd,EAAoBC,CAApB,EAAuB;EACrB,IAAI,CAACD,IAAD,IAAS,CAACA,IAAI,CAACE,MAAf,IAAyBF,IAAI,CAACG,MAAL,CAAY,CAAZ,MAAmB,GAAhD,EAAqD;IACnD,OAAO,IAAP;EACD,CAHoB,CAKrB;;;EACA,IAAIC,MAAM,GAAGJ,IAAI,CAACL,KAAL,CAAW,GAAX,CAAb;EACA,OAAO;IACLU,QAAQ,EAAED,MAAM,CAAC,CAAD,CADX;IAELE,QAAQ,EAAEF,MAAM,CAAC,CAAD,CAFX;IAGLG,GAAG,EAAEH,MAAM,CAAC,CAAD,CAHN;IAILI,GAAG,EAAEJ,MAAM,CAAC,CAAD,CAJN;IAKL;IACAK,KAAK,EAAEL,MAAM,CAAC,CAAD,CANR;IAOLM,OAAO,EAAEN,MAAM,CAAC,CAAD,CAPV;IAQLO,KAAK,EAAEP,MAAM,CAAC,CAAD;EARR,CAAP;AAUD"},"metadata":{},"sourceType":"script"}