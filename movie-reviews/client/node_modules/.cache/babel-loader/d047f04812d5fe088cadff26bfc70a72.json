{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\n\nvar parse = require('parse-passwd');\n\nfunction homedir() {\n  // The following logic is from looking at logic used in the different platform\n  // versions of the uv_os_homedir function found in https://github.com/libuv/libuv\n  // This is the function used in modern versions of node.js\n  if (process.platform === 'win32') {\n    // check the USERPROFILE first\n    if (process.env.USERPROFILE) {\n      return process.env.USERPROFILE;\n    } // check HOMEDRIVE and HOMEPATH\n\n\n    if (process.env.HOMEDRIVE && process.env.HOMEPATH) {\n      return process.env.HOMEDRIVE + process.env.HOMEPATH;\n    } // fallback to HOME\n\n\n    if (process.env.HOME) {\n      return process.env.HOME;\n    }\n\n    return null;\n  } // check HOME environment variable first\n\n\n  if (process.env.HOME) {\n    return process.env.HOME;\n  } // on linux platforms (including OSX) find the current user and get their homedir from the /etc/passwd file\n\n\n  var passwd = tryReadFileSync('/etc/passwd');\n  var home = find(parse(passwd), getuid());\n\n  if (home) {\n    return home;\n  } // fallback to using user environment variables\n\n\n  var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n\n  if (!user) {\n    return null;\n  }\n\n  if (process.platform === 'darwin') {\n    return '/Users/' + user;\n  }\n\n  return '/home/' + user;\n}\n\nfunction find(arr, uid) {\n  var len = arr.length;\n\n  for (var i = 0; i < len; i++) {\n    if (+arr[i].uid === uid) {\n      return arr[i].homedir;\n    }\n  }\n}\n\nfunction getuid() {\n  if (typeof process.geteuid === 'function') {\n    return process.geteuid();\n  }\n\n  return process.getuid();\n}\n\nfunction tryReadFileSync(fp) {\n  try {\n    return fs.readFileSync(fp, 'utf8');\n  } catch (err) {\n    return '';\n  }\n}\n\nmodule.exports = homedir;","map":{"version":3,"names":["fs","require","parse","homedir","process","platform","env","USERPROFILE","HOMEDRIVE","HOMEPATH","HOME","passwd","tryReadFileSync","home","find","getuid","user","LOGNAME","USER","LNAME","USERNAME","arr","uid","len","length","i","geteuid","fp","readFileSync","err","module","exports"],"sources":["/Users/robinlaws/Documents/ASDTERM3/CP3540 Applied ASD Project /React-Movie-Reviews/movie-reviews/node_modules/homedir-polyfill/polyfill.js"],"sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar parse = require('parse-passwd');\n\nfunction homedir() {\n  // The following logic is from looking at logic used in the different platform\n  // versions of the uv_os_homedir function found in https://github.com/libuv/libuv\n  // This is the function used in modern versions of node.js\n\n  if (process.platform === 'win32') {\n    // check the USERPROFILE first\n    if (process.env.USERPROFILE) {\n      return process.env.USERPROFILE;\n    }\n\n    // check HOMEDRIVE and HOMEPATH\n    if (process.env.HOMEDRIVE && process.env.HOMEPATH) {\n      return process.env.HOMEDRIVE + process.env.HOMEPATH;\n    }\n\n    // fallback to HOME\n    if (process.env.HOME) {\n      return process.env.HOME;\n    }\n\n    return null;\n  }\n\n  // check HOME environment variable first\n  if (process.env.HOME) {\n    return process.env.HOME;\n  }\n\n  // on linux platforms (including OSX) find the current user and get their homedir from the /etc/passwd file\n  var passwd = tryReadFileSync('/etc/passwd');\n  var home = find(parse(passwd), getuid());\n  if (home) {\n    return home;\n  }\n\n  // fallback to using user environment variables\n  var user = process.env.LOGNAME || process.env.USER || process.env.LNAME || process.env.USERNAME;\n\n  if (!user) {\n    return null;\n  }\n\n  if (process.platform === 'darwin') {\n    return '/Users/' + user;\n  }\n\n  return '/home/' + user;\n}\n\nfunction find(arr, uid) {\n  var len = arr.length;\n  for (var i = 0; i < len; i++) {\n    if (+arr[i].uid === uid) {\n      return arr[i].homedir;\n    }\n  }\n}\n\nfunction getuid() {\n  if (typeof process.geteuid === 'function') {\n    return process.geteuid();\n  }\n  return process.getuid();\n}\n\nfunction tryReadFileSync(fp) {\n  try {\n    return fs.readFileSync(fp, 'utf8');\n  } catch (err) {\n    return '';\n  }\n}\n\nmodule.exports = homedir;\n\n"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,cAAD,CAAnB;;AAEA,SAASE,OAAT,GAAmB;EACjB;EACA;EACA;EAEA,IAAIC,OAAO,CAACC,QAAR,KAAqB,OAAzB,EAAkC;IAChC;IACA,IAAID,OAAO,CAACE,GAAR,CAAYC,WAAhB,EAA6B;MAC3B,OAAOH,OAAO,CAACE,GAAR,CAAYC,WAAnB;IACD,CAJ+B,CAMhC;;;IACA,IAAIH,OAAO,CAACE,GAAR,CAAYE,SAAZ,IAAyBJ,OAAO,CAACE,GAAR,CAAYG,QAAzC,EAAmD;MACjD,OAAOL,OAAO,CAACE,GAAR,CAAYE,SAAZ,GAAwBJ,OAAO,CAACE,GAAR,CAAYG,QAA3C;IACD,CAT+B,CAWhC;;;IACA,IAAIL,OAAO,CAACE,GAAR,CAAYI,IAAhB,EAAsB;MACpB,OAAON,OAAO,CAACE,GAAR,CAAYI,IAAnB;IACD;;IAED,OAAO,IAAP;EACD,CAtBgB,CAwBjB;;;EACA,IAAIN,OAAO,CAACE,GAAR,CAAYI,IAAhB,EAAsB;IACpB,OAAON,OAAO,CAACE,GAAR,CAAYI,IAAnB;EACD,CA3BgB,CA6BjB;;;EACA,IAAIC,MAAM,GAAGC,eAAe,CAAC,aAAD,CAA5B;EACA,IAAIC,IAAI,GAAGC,IAAI,CAACZ,KAAK,CAACS,MAAD,CAAN,EAAgBI,MAAM,EAAtB,CAAf;;EACA,IAAIF,IAAJ,EAAU;IACR,OAAOA,IAAP;EACD,CAlCgB,CAoCjB;;;EACA,IAAIG,IAAI,GAAGZ,OAAO,CAACE,GAAR,CAAYW,OAAZ,IAAuBb,OAAO,CAACE,GAAR,CAAYY,IAAnC,IAA2Cd,OAAO,CAACE,GAAR,CAAYa,KAAvD,IAAgEf,OAAO,CAACE,GAAR,CAAYc,QAAvF;;EAEA,IAAI,CAACJ,IAAL,EAAW;IACT,OAAO,IAAP;EACD;;EAED,IAAIZ,OAAO,CAACC,QAAR,KAAqB,QAAzB,EAAmC;IACjC,OAAO,YAAYW,IAAnB;EACD;;EAED,OAAO,WAAWA,IAAlB;AACD;;AAED,SAASF,IAAT,CAAcO,GAAd,EAAmBC,GAAnB,EAAwB;EACtB,IAAIC,GAAG,GAAGF,GAAG,CAACG,MAAd;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,GAApB,EAAyBE,CAAC,EAA1B,EAA8B;IAC5B,IAAI,CAACJ,GAAG,CAACI,CAAD,CAAH,CAAOH,GAAR,KAAgBA,GAApB,EAAyB;MACvB,OAAOD,GAAG,CAACI,CAAD,CAAH,CAAOtB,OAAd;IACD;EACF;AACF;;AAED,SAASY,MAAT,GAAkB;EAChB,IAAI,OAAOX,OAAO,CAACsB,OAAf,KAA2B,UAA/B,EAA2C;IACzC,OAAOtB,OAAO,CAACsB,OAAR,EAAP;EACD;;EACD,OAAOtB,OAAO,CAACW,MAAR,EAAP;AACD;;AAED,SAASH,eAAT,CAAyBe,EAAzB,EAA6B;EAC3B,IAAI;IACF,OAAO3B,EAAE,CAAC4B,YAAH,CAAgBD,EAAhB,EAAoB,MAApB,CAAP;EACD,CAFD,CAEE,OAAOE,GAAP,EAAY;IACZ,OAAO,EAAP;EACD;AACF;;AAEDC,MAAM,CAACC,OAAP,GAAiB5B,OAAjB"},"metadata":{},"sourceType":"script"}