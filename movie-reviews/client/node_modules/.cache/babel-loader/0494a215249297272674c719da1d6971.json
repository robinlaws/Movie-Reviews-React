{"ast":null,"code":"/*!\n * filebase <https://github.com/jonschlinkert/filebase>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n'use strict';\n\nvar fs = require('fs');\n\nvar path = require('path');\n\nvar git = require('gitty');\n\nvar Emitter = require('component-emitter');\n\nvar utils = require('./utils');\n/**\n * Create an instance of `Filebase` with the given `options`\n *\n * ```js\n * var filebase = new Filebase();\n * ```\n *\n * @param {Object} `options`\n * @api public\n */\n\n\nfunction Filebase(options) {\n  this.options = options || {};\n  this.cache = {};\n  this.paths = {};\n  this.defaultConfig();\n}\n/**\n * Inherit `Emitter`\n */\n\n\nEmitter(Filebase.prototype);\n/**\n * Default configuration for Filebase\n */\n\nFilebase.prototype.defaultConfig = function () {\n  // placeholder for real messages...\n  this.message('writeFile', 'Wrote file');\n};\n/**\n * Add file `key` with the given `value`\n *\n * @param {String} `key`\n * @param {Object} `value`\n * @api public\n */\n\n\nFilebase.prototype.set = function (key, value) {\n  this.files[key] = value;\n  return this;\n};\n/**\n * Get file `key`\n *\n * @param {String} `key`\n * @return {Object}\n * @api public\n */\n\n\nFilebase.prototype.get = function (key) {\n  return this.files[key];\n};\n/**\n * Return true if file `key` exists.\n *\n * @param {String} `key`\n * @return {Boolean}\n * @api public\n */\n\n\nFilebase.prototype.has = function (key) {\n  return this.files.hasOwnProperty(key);\n};\n/**\n * Delete file `key`\n *\n * @param {String} `key`\n * @api public\n */\n\n\nFilebase.prototype.del = function (key) {\n  delete this.files[key];\n  return this;\n};\n\nFilebase.prototype.message = function (key, message) {\n  utils.set(this.messages, key, message);\n  return this;\n};\n\nFilebase.prototype.add = function (cb) {\n  this.repo.add(['.'], cb);\n  return this;\n};\n\nFilebase.prototype.commit = function (message, cb) {\n  if (typeof message === 'function') {\n    cb = message;\n    message = 'writeFile';\n  }\n\n  var msg = utils.get(this.messages, message) || message;\n  this.add(function (err) {\n    if (err) return cb(err);\n    this.repo.commit(msg, cb);\n  }.bind(this));\n  return this;\n};\n\nFilebase.prototype.readFile = function (fp) {};\n\nFilebase.prototype.writeFile = function (filename, str, cb) {\n  var dest = path.join(this.dest, filename);\n  utils.writeFile(dest, str, function (err) {\n    if (err) return cb(err);\n    this.gitCommit('writeFile', cb);\n  }.bind(this));\n};\n/**\n * Synchronously initialize a new git repository.\n *\n * ```js\n * filebase.initSync();\n * ```\n * @api public\n */\n\n\nFilebase.prototype.initSync = function () {\n  this.repo.initSync();\n  return this;\n};\n/**\n * Persist the filebase to disk.\n *\n * ```js\n * filebase.save();\n * ```\n * @api public\n */\n\n\nFilebase.prototype.save = function () {\n  utils.writeJson.sync(this.path, this.data);\n};\n/**\n * Create the property key to use for getting and setting\n * the `default` value for the current locale.\n */\n\n\nFilebase.prototype.defaultKey = function (locale) {\n  return (locale || this.locale) + '.default';\n};\n/**\n * Create the property key to use for getting and setting\n * values for the current locale and cwd.\n */\n\n\nFilebase.prototype.toKey = function (locale) {\n  return utils.toKey(locale || this.locale, this.cwd);\n};\n/**\n * Ensure that a directory exists.\n */\n\n\nFilebase.prototype.ensureDir = function (dir) {\n  if (!fs.existsSync(dir)) utils.mkdirp.sync(dir);\n  return dir;\n};\n/**\n * Visit `method` over each property on the given `value`.\n *\n * @param {String} `method` The method to call.\n * @param {Object} `val`\n * @return {Object}\n */\n\n\nFilebase.prototype.visit = function (method, val) {\n  return utils.visit(this, method, val);\n};\n/**\n * Getter/setter for cwd\n */\n\n\nObject.defineProperty(Filebase.prototype, 'cwd', {\n  set: function (cwd) {\n    this.cache.cwd = cwd;\n  },\n  get: function () {\n    if (this.cache.cwd) {\n      return this.cache.cwd;\n    }\n\n    var cwd = this.options.cwd || process.cwd();\n    return this.cache.cwd = cwd;\n  }\n});\n/**\n * Setter for `repo` directory\n */\n\nObject.defineProperty(Filebase.prototype, 'repo', {\n  set: function (repo) {\n    throw new Error('repo is a getter based on `dest` and cannot be defined.');\n  },\n  get: function () {\n    if (this.cache.repo) {\n      return this.cache.repo;\n    }\n\n    return this.cache.repo = git(this.dest);\n  }\n});\n/**\n * Setter for `templates` directory, used internally by Filebase for\n * generating assets.\n */\n\nObject.defineProperty(Filebase.prototype, 'templates', {\n  set: function (templates) {\n    throw new Error('\"templates\" is a private getter and cannot be defined.');\n  },\n  get: function () {\n    return this.ensureDir(path.join(__dirname, 'support/templates'));\n  }\n});\n/**\n * Getter/setter for dest\n */\n\nObject.defineProperty(Filebase.prototype, 'dest', {\n  set: function (dest) {\n    this.cache.dest = dest;\n  },\n  get: function () {\n    if (this.cache.dest) {\n      return this.cache.dest;\n    }\n\n    var dest = utils.resolveDir(this.options.dest || '~/filebase');\n    return this.cache.dest = this.ensureDir(dest);\n  }\n});\n/**\n * Getter/setter for path\n */\n\nObject.defineProperty(Filebase.prototype, 'path', {\n  set: function (fp) {\n    throw new Error('\"path\" is a getter based on `dest` and cannot be defined.');\n  },\n  get: function () {\n    if (this.cache.path) {\n      return this.cache.path;\n    }\n\n    var fp = path.resolve(this.dest, this.name + '.json');\n    return this.cache.path = fp;\n  }\n});\n/**\n * Getter/setter for path\n */\n\nObject.defineProperty(Filebase.prototype, 'locale', {\n  set: function (locale) {\n    this.cache.locale = locale;\n  },\n  get: function () {\n    return this.cache.locale || this.options.locale || 'en';\n  }\n});\n/**\n * Expose `Filebase`\n */\n\nmodule.exports = Filebase;","map":{"version":3,"names":["fs","require","path","git","Emitter","utils","Filebase","options","cache","paths","defaultConfig","prototype","message","set","key","value","files","get","has","hasOwnProperty","del","messages","add","cb","repo","commit","msg","err","bind","readFile","fp","writeFile","filename","str","dest","join","gitCommit","initSync","save","writeJson","sync","data","defaultKey","locale","toKey","cwd","ensureDir","dir","existsSync","mkdirp","visit","method","val","Object","defineProperty","process","Error","templates","__dirname","resolveDir","resolve","name","module","exports"],"sources":["/Users/robinlaws/Documents/ASDTERM3/CP3540 Applied ASD Project /React-Movie-Reviews/movie-reviews/node_modules/filebase/index.js"],"sourcesContent":["/*!\n * filebase <https://github.com/jonschlinkert/filebase>\n *\n * Copyright (c) 2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar git = require('gitty');\nvar Emitter = require('component-emitter');\nvar utils = require('./utils');\n\n/**\n * Create an instance of `Filebase` with the given `options`\n *\n * ```js\n * var filebase = new Filebase();\n * ```\n *\n * @param {Object} `options`\n * @api public\n */\n\nfunction Filebase(options) {\n  this.options = options || {};\n  this.cache = {};\n  this.paths = {};\n  this.defaultConfig();\n}\n\n/**\n * Inherit `Emitter`\n */\n\nEmitter(Filebase.prototype);\n\n/**\n * Default configuration for Filebase\n */\n\nFilebase.prototype.defaultConfig = function() {\n  // placeholder for real messages...\n  this.message('writeFile', 'Wrote file');\n};\n\n/**\n * Add file `key` with the given `value`\n *\n * @param {String} `key`\n * @param {Object} `value`\n * @api public\n */\n\nFilebase.prototype.set = function(key, value) {\n  this.files[key] = value;\n  return this;\n};\n\n/**\n * Get file `key`\n *\n * @param {String} `key`\n * @return {Object}\n * @api public\n */\n\nFilebase.prototype.get = function(key) {\n  return this.files[key];\n};\n\n/**\n * Return true if file `key` exists.\n *\n * @param {String} `key`\n * @return {Boolean}\n * @api public\n */\n\nFilebase.prototype.has = function(key) {\n  return this.files.hasOwnProperty(key);\n};\n\n/**\n * Delete file `key`\n *\n * @param {String} `key`\n * @api public\n */\n\nFilebase.prototype.del = function(key) {\n  delete this.files[key];\n  return this;\n};\n\nFilebase.prototype.message = function(key, message) {\n  utils.set(this.messages, key, message);\n  return this;\n};\n\nFilebase.prototype.add = function(cb) {\n  this.repo.add(['.'], cb);\n  return this;\n};\n\nFilebase.prototype.commit = function(message, cb) {\n  if (typeof message === 'function') {\n    cb = message;\n    message = 'writeFile';\n  }\n\n  var msg = utils.get(this.messages, message) || message;\n\n  this.add(function(err) {\n    if (err) return cb(err);\n    this.repo.commit(msg, cb);\n  }.bind(this));\n  return this;\n};\n\nFilebase.prototype.readFile = function(fp) {\n\n};\n\nFilebase.prototype.writeFile = function(filename, str, cb) {\n  var dest = path.join(this.dest, filename);\n\n  utils.writeFile(dest, str, function(err) {\n    if (err) return cb(err);\n\n    this.gitCommit('writeFile', cb);\n  }.bind(this));\n};\n\n/**\n * Synchronously initialize a new git repository.\n *\n * ```js\n * filebase.initSync();\n * ```\n * @api public\n */\n\nFilebase.prototype.initSync = function() {\n  this.repo.initSync();\n  return this;\n};\n\n/**\n * Persist the filebase to disk.\n *\n * ```js\n * filebase.save();\n * ```\n * @api public\n */\n\nFilebase.prototype.save = function() {\n  utils.writeJson.sync(this.path, this.data);\n};\n\n/**\n * Create the property key to use for getting and setting\n * the `default` value for the current locale.\n */\n\nFilebase.prototype.defaultKey = function(locale) {\n  return (locale || this.locale) + '.default';\n};\n\n/**\n * Create the property key to use for getting and setting\n * values for the current locale and cwd.\n */\n\nFilebase.prototype.toKey = function(locale) {\n  return utils.toKey(locale || this.locale, this.cwd);\n};\n\n/**\n * Ensure that a directory exists.\n */\n\nFilebase.prototype.ensureDir = function(dir) {\n  if (!fs.existsSync(dir)) utils.mkdirp.sync(dir);\n  return dir;\n};\n\n/**\n * Visit `method` over each property on the given `value`.\n *\n * @param {String} `method` The method to call.\n * @param {Object} `val`\n * @return {Object}\n */\n\nFilebase.prototype.visit = function(method, val) {\n  return utils.visit(this, method, val);\n};\n\n/**\n * Getter/setter for cwd\n */\n\nObject.defineProperty(Filebase.prototype, 'cwd', {\n  set: function(cwd) {\n    this.cache.cwd = cwd;\n  },\n  get: function() {\n    if (this.cache.cwd) {\n      return this.cache.cwd;\n    }\n    var cwd = this.options.cwd || process.cwd();\n    return (this.cache.cwd = cwd);\n  }\n});\n\n/**\n * Setter for `repo` directory\n */\n\nObject.defineProperty(Filebase.prototype, 'repo', {\n  set: function(repo) {\n    throw new Error('repo is a getter based on `dest` and cannot be defined.');\n  },\n  get: function() {\n    if (this.cache.repo) {\n      return this.cache.repo;\n    }\n    return (this.cache.repo = git(this.dest));\n  }\n});\n\n/**\n * Setter for `templates` directory, used internally by Filebase for\n * generating assets.\n */\n\nObject.defineProperty(Filebase.prototype, 'templates', {\n  set: function(templates) {\n    throw new Error('\"templates\" is a private getter and cannot be defined.');\n  },\n  get: function() {\n    return this.ensureDir(path.join(__dirname, 'support/templates'));\n  }\n});\n\n/**\n * Getter/setter for dest\n */\n\nObject.defineProperty(Filebase.prototype, 'dest', {\n  set: function(dest) {\n    this.cache.dest = dest;\n  },\n  get: function() {\n    if (this.cache.dest) {\n      return this.cache.dest;\n    }\n    var dest = utils.resolveDir(this.options.dest || '~/filebase');\n    return (this.cache.dest = this.ensureDir(dest));\n  }\n});\n\n/**\n * Getter/setter for path\n */\n\nObject.defineProperty(Filebase.prototype, 'path', {\n  set: function(fp) {\n    throw new Error('\"path\" is a getter based on `dest` and cannot be defined.');\n  },\n  get: function() {\n    if (this.cache.path) {\n      return this.cache.path;\n    }\n    var fp = path.resolve(this.dest, this.name + '.json');\n    return (this.cache.path = fp);\n  }\n});\n\n/**\n * Getter/setter for path\n */\n\nObject.defineProperty(Filebase.prototype, 'locale', {\n  set: function(locale) {\n    this.cache.locale = locale;\n  },\n  get: function() {\n    return this.cache.locale || this.options.locale || 'en';\n  }\n});\n\n/**\n * Expose `Filebase`\n */\n\nmodule.exports = Filebase;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}