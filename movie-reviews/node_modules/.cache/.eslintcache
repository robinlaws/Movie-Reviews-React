[{"/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/index.js":"1","/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/App.js":"2","/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/components/nav.js":"3","/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/components/footer.js":"4","/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/pages/Home.js":"5","/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/pages/NotFoundPage.js":"6","/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/pages/LeaveReview.js":"7"},{"size":346,"mtime":1653402929565,"results":"8","hashOfConfig":"9"},{"size":1287,"mtime":1653422591899,"results":"10","hashOfConfig":"9"},{"size":339,"mtime":1653402688308,"results":"11","hashOfConfig":"9"},{"size":398,"mtime":1653418391308,"results":"12","hashOfConfig":"9"},{"size":1776,"mtime":1653422666686,"results":"13","hashOfConfig":"9"},{"size":334,"mtime":1653402839449,"results":"14","hashOfConfig":"9"},{"size":3714,"mtime":1653422024996,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ti4xe9",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},"/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/index.js",[],[],"/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/App.js",[],[],"/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/components/nav.js",[],[],"/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/components/footer.js",[],[],"/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/pages/Home.js",["39","40"],[],"import React, { useEffect, useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Axios from \"axios\";\n\n\nexport function Home(props){\n\n    const removeMovie = (event) => {\n        const target = event.target;\n       const movieTitle = event.target.name;\n       props.setMovies(props.movies.filter(movie => movie.title !== movieTitle));\n       Axios.post(\"http://localhost:8000/api/updateMovies\", {title: target.title, release: target.release, actors: target.actors, rating: target.rating, image: target.image})\n       .then((response) => console.log(response));\n       };\n    \n    if(props.movies.length > 0){\n        return (\n            <div className=\"container\">\n            <div style={{paddingBottom: \"100px\"}} id=\"align-content-*-center\">\n                <h1><strong>MOVIE REVIEWS</strong></h1>\n                <hr></hr>\n                <ul style={{listStyleType: \"none\", textAlign: \"center\"  }}>\n                {props.movies.map((movie)=> ( \n                    <>\n                    <li key={movie.index}><h4><strong>{movie.title}</strong></h4></li>\n                    <li key={movie.index}>Release: {movie.release}</li>\n                    <li key={movie.index}>Actors: {movie.actors}</li>\n                    <li key={movie.index}>Rating: {movie.rating}/5</li>\n                    <img key={movie.index} src={movie.image} alt=\"movie poster\"></img><br /><br />\n                    <button className= \"btn-primary\" onClick={removeMovie} name={movie.title}>Remove Movie</button>               \n                    <hr></hr>\n                    </>\n                ))}\n                </ul>\n            </div>\n        </div>\n    )};\n\n    return (\n        <p style={{paddingBottom: \"500px\"}}><h1>NO AVAILABLE MOVIE REVIEWS</h1></p>\n    )};\n    \n","/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/pages/NotFoundPage.js",[],[],"/Users/robinlaws/Desktop/movie-example2/client/movie-react/src/pages/LeaveReview.js",["41"],[],"import React, { useEffect, useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Axios from \"axios\";\nimport { useForm } from \"react-hook-form\";\n\nexport function LeaveReview(props){\n    const { register, handleSubmit, reset, formState: { errors } } = useForm();\n    const [success, setSuccess] = useState(false);\n    useEffect(() => {\n            reset({title: \"\", release: \"\", actors: \"\", rating: \"\"})\n        }, [success]);\n\n    const movies = props.movies;\n    const setMovies = props.setMovies;\n\n    const createMovie = (data) => {\n        setSuccess(true);\n        Axios.post(\"http://localhost:8000/api/createMovie\", {title: data.title, release: data.release, actors: data.actors, rating: data.rating, image: data.image}).then((response) => {\n          setMovies([...movies, {title: data.title, release: data.release, actors: data.actors, rating: data.rating, image: data.image}])\n        });\n        alert(\"Movie has been added successfully!\");\n        props.setUpdate(true);\n      };\n      return (\n        <div className=\"container\">\n            <h1><strong>LEAVE A REVIEW</strong></h1>\n            <div className=\"formContainer\">\n            <form onSubmit={handleSubmit(createMovie)}>\n                    <div class=\"form-group\">\n                        <label>TITLE:</label><input className=\"input-group\"{...register(\"title\", {required: true, minLength: 4})} />\n                         {errors.title && <span className=\"input-group-text\">Please enter atleast 4 characters</span>}\n                    </div>\n                    <div class=\"form-group\">\n                        <label>RELEASE:</label><input className=\"input-group\" {...register(\"release\", {required: true, minLength: 4 })} />\n                        {errors.release && <span className=\"input-group-text\">Please enter atleast 4 characters</span>}\n                    </div>\n                    <div class=\"form-group\">\n                        <label>ACTORS:</label><input className=\"input-group\" {...register(\"actors\", {required: true, minLength: 10 })}/>\n                        {errors.actors && <span className=\"input-group-text\">Please enter atleast 10 characters</span>}\n                    </div>\n                    <div class=\"form-group\">\n                        <label>RATING:</label><br/><input style={{maxWidth:\"100px\" ,textAlign: \"center\"}}type=\"number\"{...register(\"rating\", {required: true, min: 0, max: 5 })}/>\n                        {errors.rating && <span className=\"input-group-text\">Rate from 0-5</span>}\n                    </div>\n                    <br></br>\n                    <label>SELECT IMAGE:</label><br/>\n                    <select className=\"drop-down\" {...register(\"image\")}>\n                        <option className=\"selection\" defaultValue=\"\" disabled selected></option>\n                        <option value='/movieImages/generic.jpeg'>Other</option>\n                        <option value='/movieImages/forrestgump.jpeg'>Forrest Gump</option>\n                        <option value='/movieImages/inception.jpeg'>Inception</option>\n                        <option value='/movieImages/lambs.jpeg'>Silence of the Lambs</option>\n                        <option value='/movieImages/shawshank.jpg'>The Shawshank Redemption</option>\n                        <option value='/movieImages/darkknight.jpg'>The Dark Knight</option>\n                        <option value='/movieImages/godfather.jpg'>The Godfather</option>\n                        <option value='/movieImages/fightclub.jpg'>Fight Club</option>   \n                    </select><br/><br/>\n                    <input className=\"btn-primary\" type=\"submit\" />\n                </form>\n            </div>\n        </div>\n        )};\n",{"ruleId":"42","severity":1,"message":"43","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"46","line":1,"column":28,"nodeType":"44","messageId":"45","endLine":1,"endColumn":36},{"ruleId":"47","severity":1,"message":"48","line":11,"column":12,"nodeType":"49","endLine":11,"endColumn":21,"suggestions":"50"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'reset'. Either include it or remove the dependency array.","ArrayExpression",["51"],{"desc":"52","fix":"53"},"Update the dependencies array to be: [reset, success]",{"range":"54","text":"55"},[437,446],"[reset, success]"]